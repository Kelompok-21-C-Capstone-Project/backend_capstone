// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/admin_register": {
            "post": {
                "description": "Create new admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admins"
                ],
                "summary": "Admin register",
                "parameters": [
                    {
                        "description": "Payload format",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RegisterAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user data from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user data by id",
                "parameters": [
                    {
                        "description": "Payload format",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    }
                }
            }
        },
        "/v1/clients/payments": {
            "get": {
                "description": "Get all payment methods and services",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get all payment",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PaymentMethods"
                        }
                    }
                }
            }
        },
        "/v1/clients/products": {
            "get": {
                "description": "Get all products by all category frontned from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get products by all category for frontned",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/backend_capstone_services_product_dto.ProductCategory"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    }
                }
            }
        },
        "/v1/clients/products/:slug": {
            "get": {
                "description": "Get product by specific category for frontend from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get product by specific category for frontend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug category",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/backend_capstone_services_product_dto.ProductCategory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    }
                }
            }
        },
        "/v1/clients/products/categories": {
            "get": {
                "description": "Get product category for client side",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clients"
                ],
                "summary": "Get all category",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProductCategoryResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    }
                }
            }
        },
        "/v1/product_brands": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get product brand by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_brands"
                ],
                "summary": "Get brand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search data by query",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ResponseBodyProductBrand"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new product brand",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_brands"
                ],
                "summary": "Create brand",
                "parameters": [
                    {
                        "description": "Payload format",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateBrandRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ProductBrandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    }
                }
            }
        },
        "/v1/product_brands/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get product brand by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_brands"
                ],
                "summary": "Get brand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProductBrandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update brand data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_brands"
                ],
                "summary": "Update brand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload format",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateBrandRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProductBrandResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete brand data from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_brands"
                ],
                "summary": "Delete brand data by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    }
                }
            }
        },
        "/v1/product_brands/{id}/categories/{category_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add category to brand",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_brands"
                ],
                "summary": "Add category to brand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove category from brand",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_brands"
                ],
                "summary": "Remove category from brand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicBrandResponse"
                        }
                    }
                }
            }
        },
        "/v1/product_categories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get product category for admin side",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_categories"
                ],
                "summary": "Get all category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search data by query",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ResponseBodyProductCategory"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new product category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_categories"
                ],
                "summary": "Create category",
                "parameters": [
                    {
                        "description": "Payload format",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ProductCategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    }
                }
            }
        },
        "/v1/product_categories/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get product category by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_categories"
                ],
                "summary": "Get category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProductCategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update category data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_categories"
                ],
                "summary": "Update category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload format",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProductCategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete category data from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product_categories"
                ],
                "summary": "Delete category data by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategorySuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicCategoryResponse"
                        }
                    }
                }
            }
        },
        "/v1/products": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get product data from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search data by query",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by brand",
                        "name": "brand",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProductBrandResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new product product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create product",
                "parameters": [
                    {
                        "description": "Payload format",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    }
                }
            }
        },
        "/v1/products/stocks": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update mulitple product stock",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update product stock",
                "parameters": [
                    {
                        "description": "Payload format",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PayloadUpdateStock"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    }
                }
            }
        },
        "/v1/products/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get product product by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update product data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload format",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete product data from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete product data by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductResponse"
                        }
                    }
                }
            }
        },
        "/v1/tokens": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get detailed token data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get token payload",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.JwtPayload"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    }
                }
            }
        },
        "/v1/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get transaction data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.BillClient"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    }
                }
            }
        },
        "/v1/transactions/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get transaction transaction by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BillClient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update transaction data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Update transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete transaction data from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Delete transaction data by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Brand ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BasicProductSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    }
                }
            }
        },
        "/v1/user_register": {
            "post": {
                "description": "Create new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "User register",
                "parameters": [
                    {
                        "description": "Payload format",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/:id/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all transaction from specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all transaction from specific user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search data by query",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by date",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by date range",
                        "name": "date_range",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search data by page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ResponseUserTransaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/:id/transactions/:transaction_id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all transaction from specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all transaction from specific user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ClientTransactionsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/transactions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new transaction for users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "User create transaction",
                "parameters": [
                    {
                        "description": "Payload format",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.BillClient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get detailed user data by id from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user data by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload format",
                        "name": "Payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user data from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user data by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicUserResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}/transactions/{transaction_id}/bills": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get transaction transactions nill by id \u0026 user id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get transactions bill",
                "parameters": [
                    {
                        "type": "string",
                        "description": "transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BillClient"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BasicTransactionResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "backend_capstone_services_product_dto.ProductCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "xxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "label": {
                    "type": "string",
                    "example": "Some Category"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ClientProduct"
                    }
                },
                "slug": {
                    "type": "string",
                    "example": "some-category"
                }
            }
        },
        "backend_capstone_services_productcategory_dto.ProductCategory": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "some description"
                },
                "icon": {
                    "type": "string",
                    "example": "mdi-some-category"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Some Name"
                },
                "product_sum": {
                    "type": "integer",
                    "example": 33
                },
                "slug": {
                    "type": "string",
                    "example": "some-name"
                }
            }
        },
        "dto.BillClient": {
            "type": "object",
            "properties": {
                "bill": {
                    "type": "integer",
                    "example": 11500
                },
                "charged": {
                    "type": "integer",
                    "example": 1500
                },
                "dead_line": {
                    "type": "string",
                    "example": "2022-07-05T14:32:46.996074+07"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "payment_method": {
                    "type": "string",
                    "example": "Mandiri Virtual Account"
                },
                "product_name": {
                    "type": "string",
                    "example": "Telkomsel 5GB Super Tiktok"
                },
                "product_price": {
                    "type": "integer",
                    "example": 10000
                },
                "status": {
                    "type": "string",
                    "example": "Pending"
                },
                "transaction_id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "va_number": {
                    "type": "string",
                    "example": "2312312412523"
                }
            }
        },
        "dto.ClientProduct": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string",
                    "example": "xxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "description": {
                    "type": "string",
                    "example": "Some description"
                },
                "group": {
                    "type": "string",
                    "example": "Telkomsel"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "is_discount": {
                    "type": "boolean",
                    "example": false
                },
                "label": {
                    "type": "string",
                    "example": "Telkomsel 5GB Super 24H"
                },
                "price": {
                    "type": "integer",
                    "example": 50000
                },
                "stock": {
                    "type": "integer",
                    "example": 30
                }
            }
        },
        "dto.ClientTransactionsResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2022-07-05T14:32:46.996074+07"
                },
                "icon": {
                    "type": "string",
                    "example": "mdi-paket-data"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "label": {
                    "type": "string",
                    "example": "Telkomsel 5GB Super Tiktok"
                },
                "payment_method": {
                    "type": "string",
                    "example": "Virtual Account"
                },
                "phone_number": {
                    "type": "string",
                    "example": "2312312412523"
                },
                "price": {
                    "type": "integer",
                    "example": 11500
                },
                "status": {
                    "type": "string",
                    "example": "Pending"
                },
                "type": {
                    "type": "string",
                    "example": "paket-data"
                }
            }
        },
        "dto.ProductBrand": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "E-Money"
                },
                "description": {
                    "type": "string",
                    "example": "some description"
                },
                "icon_path": {
                    "type": "string",
                    "example": "mdi-some-brand"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "is_available": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "some name"
                },
                "product_sum": {
                    "type": "integer",
                    "example": 33
                }
            }
        },
        "dto.ResponseBodyProductBrand": {
            "type": "object",
            "properties": {
                "datas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProductBrand"
                    }
                },
                "page_length": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "dto.ResponseBodyProductCategory": {
            "type": "object",
            "properties": {
                "datas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/backend_capstone_services_productcategory_dto.ProductCategory"
                    }
                },
                "page_length": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "dto.ResponseUserTransaction": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ClientTransactionsResponse"
                    }
                },
                "page_length": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "models.PaymentResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "billed": {
                    "type": "integer"
                },
                "charged": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "methodDetails": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.ProductBrandCategoryResponse": {
            "type": "object",
            "properties": {
                "brand_id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "category_id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductResponse"
                    }
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.ProductBrandResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "some description"
                },
                "icon_path": {
                    "type": "string",
                    "example": "/path/to/file"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "is_available": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "some name"
                },
                "product_category": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductCategoryResponse"
                    }
                }
            }
        },
        "models.ProductCategoryResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "some description"
                },
                "icon": {
                    "type": "string",
                    "example": "mdi-some-category"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Some Name"
                },
                "slug": {
                    "type": "string",
                    "example": "some-name"
                }
            }
        },
        "models.ProductResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.ProductBrandCategoryResponse"
                },
                "category_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "some description"
                },
                "discount": {
                    "type": "number"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "is_discount": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Some Product"
                },
                "price": {
                    "type": "integer",
                    "example": 30000
                },
                "stock": {
                    "type": "integer",
                    "example": 30
                },
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TransactionResponse"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.TransactionResponse": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "some description"
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "payment": {
                    "$ref": "#/definitions/models.PaymentResponse"
                },
                "product_id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "updated": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            }
        },
        "models.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "testmail@mail.com"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "name": {
                    "type": "string",
                    "example": "somen name"
                },
                "phone": {
                    "type": "string",
                    "example": "0811111111"
                },
                "role": {
                    "type": "string",
                    "example": "user"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "request.CreateBrandRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Telekomunikasi"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Telkomsel"
                }
            }
        },
        "request.CreateCategoryRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "some description"
                },
                "icon": {
                    "type": "string",
                    "example": "mdi-data-icon"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "soma name"
                }
            }
        },
        "request.CreateProductRequest": {
            "type": "object",
            "properties": {
                "brand_id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "category_id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "description": {
                    "type": "string",
                    "example": "some description"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Some Product"
                },
                "price": {
                    "type": "integer",
                    "example": 30000
                },
                "stock": {
                    "type": "integer",
                    "example": 20
                }
            }
        },
        "request.CreateTransactionRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "testmail@mail.com"
                },
                "payment_data": {
                    "type": "string",
                    "example": "Misal nomer yang akan ditagih (nomer hp untuk gopay)"
                },
                "payment_details": {
                    "type": "string",
                    "example": "Mandiri Virtual Account"
                },
                "payment_method": {
                    "type": "string",
                    "example": "Virtual Account"
                },
                "price": {
                    "type": "integer",
                    "example": 300000
                },
                "product_id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx"
                },
                "transaction_data": {
                    "type": "string",
                    "example": "Data seperti nomer hp/nomer padam yg menerima produk pembelian"
                }
            }
        },
        "request.LoginUserRequest": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string",
                    "minLength": 5,
                    "example": "username"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "supersecret"
                }
            }
        },
        "request.PayloadUpdateStock": {
            "type": "object",
            "properties": {
                "datas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.UpdateProductStock"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            }
        },
        "request.RegisterAdminRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "somemail@mail.com"
                },
                "key": {
                    "type": "string",
                    "example": "adminsupersecret"
                },
                "name": {
                    "type": "string",
                    "minLength": 5,
                    "example": "some name"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "supersecret"
                },
                "phone": {
                    "type": "string",
                    "minLength": 10,
                    "example": "0833333333"
                },
                "username": {
                    "type": "string",
                    "minLength": 5,
                    "example": "username"
                }
            }
        },
        "request.RegisterUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "test@mail.com"
                },
                "name": {
                    "type": "string",
                    "minLength": 5,
                    "example": "some name"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "supersecret"
                },
                "phone": {
                    "type": "string",
                    "minLength": 10,
                    "example": "081111111"
                },
                "username": {
                    "type": "string",
                    "minLength": 5,
                    "example": "some username"
                }
            }
        },
        "request.UpdateBrandRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Excelent Celullar"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "XL"
                }
            }
        },
        "request.UpdateCategoryRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "some description"
                },
                "icon": {
                    "type": "string",
                    "example": "mdi-some-category"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "some name"
                }
            }
        },
        "request.UpdateProductRequest": {
            "type": "object",
            "properties": {
                "brand_id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "category_id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "description": {
                    "type": "string",
                    "example": "some description"
                },
                "is_available": {
                    "type": "boolean",
                    "example": true
                },
                "is_discount": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Some Product"
                },
                "price": {
                    "type": "integer",
                    "example": 30000
                },
                "stock": {
                    "type": "integer",
                    "example": 20
                }
            }
        },
        "request.UpdateProductStock": {
            "type": "object",
            "properties": {
                "add": {
                    "type": "integer",
                    "example": 3
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            }
        },
        "request.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "some name"
                },
                "password": {
                    "type": "string",
                    "example": "supersecret"
                },
                "phone": {
                    "type": "string",
                    "example": "0822222222"
                }
            }
        },
        "response.BasicBrandResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "error message"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "response.BasicBrandSuccessResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "response.BasicCategoryResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "error message"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "response.BasicCategorySuccessResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "response.BasicProductResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "error message"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "response.BasicProductSuccessResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "response.BasicTransactionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "error message"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "response.BasicUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "error message"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "response.BasicUserSuccessResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "response.JwtPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "somemail@mail.com"
                },
                "ext": {
                    "type": "integer",
                    "example": 1257894000000
                },
                "iat": {
                    "type": "integer",
                    "example": 1257894000000
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "name": {
                    "type": "string",
                    "example": "some name"
                },
                "phone": {
                    "type": "string",
                    "example": "08XXXXXXXX"
                },
                "role": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "admin"
                    ]
                },
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "response.PaymentMethods": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.PaymentService"
                    }
                },
                "type": {
                    "type": "string",
                    "example": "Virtual Account"
                }
            }
        },
        "response.PaymentService": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string",
                    "example": "mdi-va-mandiri"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "label": {
                    "type": "string",
                    "example": "Mandiri Virtual Account"
                }
            }
        },
        "response.SuccessLoginResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "success"
                },
                "token": {
                    "type": "string",
                    "example": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxx.eyJjcmVhdGVkX2F0IjoiMjAyMi0wNy0wxxxxxxxxxxxxxxxxxxxxxxxxxxxxF9hdCI6IjIwMjItMDctMDNUMTA6MjA6NDYuMzAzNDA1OSswNzowMCIsImlkIjoiYWZjNxxxxxxxxxxxxxxxxxxxxxxxxxxxxbmFtZSI6Iml6YXFpIiwicm9xxxxxxxxxxxxxxxxxxxxxxxxxxxxJ9.-VKi0DWLKT1SxxxxxxxxxxxxxY2UbxbtFOj7cPA"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
